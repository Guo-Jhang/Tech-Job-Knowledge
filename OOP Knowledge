======================================================================
物件導向三大要素:封裝、繼承、多型
封裝:將資料分成私用(Private)、保護(Protected)、公用(Public)等，實踐 Information hiding 概念, 避免程式各個物件互相干擾，降低程式的複雜度及維護上的困難度。
繼承: 有繼承的關係後，父類別 (Super class) 中的資料 (Data) 或方法 (Method) 在次子類(Subclass)就可以繼承使用，次子類別的次子類別也可以繼承使用，最後即能達到資料重覆使用的目的。
多型(Polymorphism):代表能夠在執行階段，物件能夠依照不同情況變換資料型態，換句話說，多型是指一個物件參考可以在不同環境下，扮演不同角色的特性，指向不同的物件實體，可 透過實作多個繼承或介面來實現父類別，並使用Override或Overload來達成。
======================================================================
Overloading
『藉由接收的參數串列之型態或數量之不同，以求達到多個函式可共用相同函式名稱謂之』。講白話一點就是明明有很多個函式，但函式名稱卻能一樣，而系統如何判斷這些有相同名稱的函式該呼叫誰呢，主要就是用parameter list傳入的數量跟型別不同而定。
1.降低所需命名的函式名稱。
2.提高user的易用性
Overriding
『子類別將父類別函式重新定義以符合自身所需』 繼承過父類別後，修改某個已存在於父類別的函式。 (但是傳回值型態要相同)
======================================================================
